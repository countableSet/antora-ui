name: Pull Upstream

on:
  push: {}
#  schedule:
#    - cron: '0 0 1 * *'

jobs:
  merge:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: 'master'

      - name: Git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Create branch
        run: |
          git remote add upstream https://oauth2:${{ secrets.GITLAB_TOKEN }}@gitlab.com/antora/antora-ui-default.git
          git fetch upstream
          git checkout -b upstream-merge
          git merge --no-ff upstream/master

      - name: Count changes
        id: log_count
        run: |
          content="$(git rev-list --count origin/master...upstream-merge)"
          echo "Log changes count = ${content}"
          echo "::set-output name=count::$content"

      - name: Parse log messages
        if: steps.log_count.outputs.count != 0
        id: log_message
        run: |
          content="$(git log origin/master...upstream-merge --format="%h - %ad - %s" --date=format:'%b %d %Y')"
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=run::$content"

      - name: Create pull-request
        if: steps.log_count.outputs.count != 0
        uses: actions/github-script@v6
        env:
          LOG_MESSAGE: ${{ steps.log_message.outputs.run }}
        with:
          script: |
            const { LOG_MESSAGE } = process.env;
            github.rest.pulls.create({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              head:  upstream-merge,
              base:  master,
              title: 'Merge upstream into master',
              body: LOG_MESSAGE,
            });
